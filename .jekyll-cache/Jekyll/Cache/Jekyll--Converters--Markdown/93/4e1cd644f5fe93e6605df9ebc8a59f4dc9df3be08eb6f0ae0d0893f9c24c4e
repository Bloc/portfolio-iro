I"∂<p>With setting up CI/CD, I wanted to make sure that I covered the actual steps I took instead of going off on a tangent. Though, much was learned when going off on said tangents.</p>

<p>I would be remiss if I didn‚Äôt write about RVM.</p>

<p>The impetus of deploying my site was to integrate CI/CD, and I use Jekyll to generate static webpages which will then in turn <em>be</em> the website when hosted. Simple, I thought.</p>

<p>However, going back to my <code class="language-plaintext highlighter-rouge">ruby</code> days, one of the things that I hated was the way that I may have been developing on a ‚Äúup to date‚Äù ruby/rails setup, however, Jekyll dependencies may have fallen behind.</p>

<p>And in comes a well known version management system called <a href="https://rvm.io">RVM</a>.</p>

<p>The best way to install RVM on a system, is to follow the instructions. Since I‚Äôm using Debian on my webserver, installing as mentioned on the landing page is simple.</p>

<p>Additonally, I relied on the following to setup the <code class="language-plaintext highlighter-rouge">jenkins</code> user environment to properly call <code class="language-plaintext highlighter-rouge">rvm</code> found directly on their webpage <a href="https://rvm.io/integration/jenkins">here</a>. <strong>Remember, you must run as the <code class="language-plaintext highlighter-rouge">jenkins</code> user</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>su jenkins # need to log into jenkins as we _want_ jenkins to use rvm to build
gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
\curl -sSL https://get.rvm.io | bash -s stable
[[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; source "$HOME/.rvm/scripts/rvm"
</code></pre></div></div>

<p>Additionally add the below lines into <code class="language-plaintext highlighter-rouge">~/.rvmrc</code> as the jenkins user:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rvm_install_on_use_flag=1
rvm_project_rvmrc=1
rvm_gemset_create_on_use_flag=1
</code></pre></div></div>

<p>You can test by typing something like <code class="language-plaintext highlighter-rouge">type rvm | head -n 1</code> and you should get an output. I learned that you should see this output <code class="language-plaintext highlighter-rouge">type rvm | head -n 1</code> to have rvm work correctly on the <code class="language-plaintext highlighter-rouge">jenkins</code> user environment.</p>

<p>That should be good enough to set your environment up in the meantime.</p>

<p>Continue as the <code class="language-plaintext highlighter-rouge">jenkins</code> user on your build machine. Now, we‚Äôre going to be installing the ruby <code class="language-plaintext highlighter-rouge">gem</code>s that will install <code class="language-plaintext highlighter-rouge">jekyll</code> and <code class="language-plaintext highlighter-rouge">bundler</code>. <code class="language-plaintext highlighter-rouge">jekyll</code> is the ruby gem that is building the current webpage content for this website. <code class="language-plaintext highlighter-rouge">bundler</code> is a ruby ‚Äúpackage‚Äù retriever that reads a file like <code class="language-plaintext highlighter-rouge">Gemfile</code>, and fetches packages that will allow the content you create on your source code, to be built into the static <code class="language-plaintext highlighter-rouge">html</code> content.</p>

<p>To pre-emptively fetch this software, you should run the following if you are based on a <code class="language-plaintext highlighter-rouge">Debian/Ubuntu</code> system.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># ads environment variables to the .bashrc
echo '# Install Ruby Gems to ~/gems' &gt;&gt; ~/.bashrc
echo 'export GEM_HOME="$HOME/gems"' &gt;&gt; ~/.bashrc
echo 'export PATH="$HOME/gems/bin:$PATH"' &gt;&gt; ~/.bashrc
source ~/.bashrc

# install gems
gem install jekyll bundler
</code></pre></div></div>

<p>That <em>should</em> have you up and ready in terms of your build environment.</p>

<p>As a side note, I may update the <code class="language-plaintext highlighter-rouge">jekyll</code> version from <code class="language-plaintext highlighter-rouge">3.0</code> to the newest version <code class="language-plaintext highlighter-rouge">4.0</code> at a later date. They do have a upgrade path fortunately <a href="https://jekyllrb.com/docs/upgrading/">here</a>. What could go wrong? :)</p>

<h1 id="disclaimer">Disclaimer</h1>
<p>I did omit some <em>MAJOR</em> tweaking I had to do in order to get the porfolio to build correctly. It falls a bit out of the scope of this setup, and additonally, all the tweaking I did was not really properly captured.</p>

<p>However the gist of it is that there was some package mismatch that the packages listed in <code class="language-plaintext highlighter-rouge">Gemfile.lock</code> was complaining about. It was because the current stable version of <code class="language-plaintext highlighter-rouge">ruby</code> is <code class="language-plaintext highlighter-rouge">3.0.0</code>, and my <code class="language-plaintext highlighter-rouge">jekyll</code> environment worked being compiled best if using ruby version <code class="language-plaintext highlighter-rouge">2.7</code>.</p>

<p>There were many hoops as the <code class="language-plaintext highlighter-rouge">bundler</code> file was <em>really</em> providing issues as it also required a <em>specific</em> version to pull all the packages.</p>

<p>On top of that <code class="language-plaintext highlighter-rouge">rvm</code> was setting up <em>multiple</em> versions of bundler as the <code class="language-plaintext highlighter-rouge">default</code> version. So, deleting all the <code class="language-plaintext highlighter-rouge">bundler</code> versions <em>except</em> the one I needed was difficult because <code class="language-plaintext highlighter-rouge">gem</code> did not allow uninstalling a gem that was default.</p>

<p>All this was observed as the <code class="language-plaintext highlighter-rouge">jenkins</code> user on the build machine, and needed to be resolved in order to properly build <code class="language-plaintext highlighter-rouge">html</code> content from source via <code class="language-plaintext highlighter-rouge">jekyll</code>.</p>

<p>I have the links that helped me still on tabs in my browser, but, there was a lot of tweaking. Am gonig to attach said links just in case this is run into again. Though I truly hope not.</p>

<p>https://talk.jekyllrb.com/t/incompatible-with-the-current-version-ruby-3-0/5821/7
https://stackoverflow.com/questions/54901077/bundle-install-could-not-find-compatible-versions-for-gem-bundler
https://stackoverflow.com/questions/42548445/how-to-make-a-specific-gem-version-as-default
https://stackoverflow.com/questions/54165271/rails-5-0-7-multiple-default-gems-and-unable-to-uninstall-any-default-gem</p>
:ET